replicaCount: 1

image:
  tag: 1.0.0
  repository: jrmcdonald/ms-customer-entity
  pullPolicy: IfNotPresent

serviceAccount:
  create: true

podSecurityContext:
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false

ports:
  - name: http
    containerPort: 8080
    protocol: TCP

probes:
  readinessProbe:
    httpGet:
      path: /customer-entity/actuator/health/readiness
      port: http
    periodSeconds: 5

resources:
  limits:
    cpu: 300m
    memory: 1Gi
  requests:
    cpu: 300m
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  postgresqlUsername: customer-entity
  existingSecret: postgresql-credentials
  persistence:
    size: 4Gi
    storageClass: rook-ceph-block

applicationConfig:
  management:
    endpoint:
      restart:
        enabled: true
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus,restart
  openapi:
    servers:
      - url: http://ms-customer-entity.prod/customer-entity
        description: Customer-Entity internal service
  server:
    servlet:
      contextPath: /customer-entity
  spring:
    datasource:
      url: jdbc:postgresql://ms-customer-entity-postgresql.prod.svc.cluster.local:5432/postgres
      username: customer-entity
