replicaCount: 1

image:
  tag: 1.0.0
  repository: jrmcdonald/ms-customer-orchestration
  pullPolicy: IfNotPresent

serviceAccount:
  create: true

podSecurityContext:
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ambassador:
  enabled: true
  prefix: /customer-orchestration/v1/
  rewrite: /v1/

ports:
  - name: http
    containerPort: 8080
    protocol: TCP

probes:
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: http
    periodSeconds: 5
    failureThreshold: 1
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: http
    periodSeconds: 5
  startupProbe:
    httpGet:
      path: /actuator/health/liveness
      port: http
    periodSeconds: 3
    failureThreshold: 8

resources:
  limits:
    cpu: 300m
    memory: 1Gi
  requests:
    cpu: 300m
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}

applicationConfig:
  customer:
    entity:
      service-url: http://ms-customer-entity.prod
      service-endpoint: /v1/customer/{id}
  management:
    endpoint:
      restart:
        enabled: true
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus,restart
  openapi:
    servers:
      - url: https://api.qwyck-cloud.co.uk/customer-orchestration
        description: Customer-Orchestration external endpoint
