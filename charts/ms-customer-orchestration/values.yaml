replicaCount: 1

image:
  tag: 1.0.0
  repository: jrmcdonald/ms-customer-orchestration
  pullPolicy: IfNotPresent

serviceAccount:
  create: true

podSecurityContext:
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      location ~ /actuator {
        deny all;
        return 403;
      }
  hosts:
    - host: api.qwyck-cloud.co.uk
      paths: ["/customer-orchestration"]
  tls:
    - secretName: api-qwyck-cloud-tls
      hosts:
        - api.qwyck-cloud.co.uk

ports:
  - name: http
    containerPort: 8080
    protocol: TCP

probes:
  livenessProbe:
    httpGet:
      path: /customer-orchestration/actuator/health/liveness
      port: http
    periodSeconds: 5
    failureThreshold: 1
  readinessProbe:
    httpGet:
      path: /customer-orchestration/actuator/health/readiness
      port: http
    periodSeconds: 5
  startupProbe:
    httpGet:
      path: /customer-orchestration/actuator/health/liveness
      port: http
    periodSeconds: 3
    failureThreshold: 8

resources:
  limits:
    cpu: 100m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}

applicationConfig:
  management:
    endpoint:
      restart:
        enabled: true
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus,restart
  openapi:
    servers:
      - url: https://api.qwyck-cloud.co.uk/customer-orchestration
        description: Customer-Orchestration external endpoint
  spring:
    webflux:
      base-path: /customer-orchestration
